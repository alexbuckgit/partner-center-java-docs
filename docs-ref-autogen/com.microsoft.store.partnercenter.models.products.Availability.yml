### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.models.products.Availability"
fullName: "com.microsoft.store.partnercenter.models.products.Availability"
name: "Availability"
nameWithType: "Availability"
summary: "Represents a partner's billing profile."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.store.partnercenter.models.ResourceBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.store.partnercenter.models.ResourceBaseWithLinks?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.store.partnercenter.models.ResourceBase.getAttributes()"
- "com.microsoft.store.partnercenter.models.ResourceBaseWithLinks.getLinks()"
- "com.microsoft.store.partnercenter.models.ResourceBaseWithLinks.setLinks(TLinks)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Availability extends ResourceBaseWithLinks<StandardResourceLinks>"
constructors:
- uid: "com.microsoft.store.partnercenter.models.products.Availability.Availability()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.Availability()"
  name: "Availability()"
  nameWithType: "Availability.Availability()"
  syntax: "public Availability()"
methods:
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getCatalogItemId()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getCatalogItemId()"
  name: "getCatalogItemId()"
  nameWithType: "Availability.getCatalogItemId()"
  syntax: "public String getCatalogItemId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getCountry()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getCountry()"
  name: "getCountry()"
  nameWithType: "Availability.getCountry()"
  syntax: "public String getCountry()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getDefaultCurrency()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getDefaultCurrency()"
  name: "getDefaultCurrency()"
  nameWithType: "Availability.getDefaultCurrency()"
  syntax: "public CurrencyInfo getDefaultCurrency()"
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.products.CurrencyInfo?alt=com.microsoft.store.partnercenter.models.products.CurrencyInfo&text=CurrencyInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getId()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getId()"
  name: "getId()"
  nameWithType: "Availability.getId()"
  syntax: "public String getId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getIsPurchasable()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getIsPurchasable()"
  name: "getIsPurchasable()"
  nameWithType: "Availability.getIsPurchasable()"
  summary: "Gets a flag indicating whether the availability is purchasable or not."
  syntax: "public boolean getIsPurchasable()"
  desc: "Gets a flag indicating whether the availability is purchasable or not."
  returns:
    description: "A flag indicating whether the availability is purchasable or not."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getIsRenewable()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getIsRenewable()"
  name: "getIsRenewable()"
  nameWithType: "Availability.getIsRenewable()"
  summary: "Gets a flag indicating whether the availability is renewable or not."
  syntax: "public boolean getIsRenewable()"
  desc: "Gets a flag indicating whether the availability is renewable or not."
  returns:
    description: "A flag indicating whether the availability is renewable or not."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getProductId()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getProductId()"
  name: "getProductId()"
  nameWithType: "Availability.getProductId()"
  syntax: "public String getProductId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getSegment()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getSegment()"
  name: "getSegment()"
  nameWithType: "Availability.getSegment()"
  syntax: "public String getSegment()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getSkuId()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getSkuId()"
  name: "getSkuId()"
  nameWithType: "Availability.getSkuId()"
  syntax: "public String getSkuId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.getTerms()"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.getTerms()"
  name: "getTerms()"
  nameWithType: "Availability.getTerms()"
  summary: "Gets the terms if applicable to this availability."
  syntax: "public Iterable<AvailabilityTerm> getTerms()"
  desc: "Gets the terms if applicable to this availability."
  returns:
    description: "The terms if applicable to this availability."
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.store.partnercenter.models.products.AvailabilityTerm?alt=com.microsoft.store.partnercenter.models.products.AvailabilityTerm&text=AvailabilityTerm\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setCatalogItemId(java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setCatalogItemId(String value)"
  name: "setCatalogItemId(String value)"
  nameWithType: "Availability.setCatalogItemId(String value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setCatalogItemId(String value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setCountry(java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setCountry(String value)"
  name: "setCountry(String value)"
  nameWithType: "Availability.setCountry(String value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setCountry(String value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setDefaultCurrency(com.microsoft.store.partnercenter.models.products.CurrencyInfo)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setDefaultCurrency(CurrencyInfo value)"
  name: "setDefaultCurrency(CurrencyInfo value)"
  nameWithType: "Availability.setDefaultCurrency(CurrencyInfo value)"
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.products.CurrencyInfo?alt=com.microsoft.store.partnercenter.models.products.CurrencyInfo&text=CurrencyInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDefaultCurrency(CurrencyInfo value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setId(java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setId(String value)"
  name: "setId(String value)"
  nameWithType: "Availability.setId(String value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setId(String value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setIsPurchasable(boolean)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setIsPurchasable(boolean value)"
  name: "setIsPurchasable(boolean value)"
  nameWithType: "Availability.setIsPurchasable(boolean value)"
  summary: "Sets a flag indicating whether the availability is purchasable or not."
  parameters:
  - description: "A flag indicating whether the availability is purchasable or not."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setIsPurchasable(boolean value)"
  desc: "Sets a flag indicating whether the availability is purchasable or not."
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setIsRenewable(boolean)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setIsRenewable(boolean value)"
  name: "setIsRenewable(boolean value)"
  nameWithType: "Availability.setIsRenewable(boolean value)"
  summary: "Sets a flag indicating whether the availability is renewable or not."
  parameters:
  - description: "A flag indicating whether the availability is renewable or not."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setIsRenewable(boolean value)"
  desc: "Sets a flag indicating whether the availability is renewable or not."
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setProductId(java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setProductId(String value)"
  name: "setProductId(String value)"
  nameWithType: "Availability.setProductId(String value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setProductId(String value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setSegment(java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setSegment(String value)"
  name: "setSegment(String value)"
  nameWithType: "Availability.setSegment(String value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSegment(String value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setSkuId(java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setSkuId(String value)"
  name: "setSkuId(String value)"
  nameWithType: "Availability.setSkuId(String value)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSkuId(String value)"
- uid: "com.microsoft.store.partnercenter.models.products.Availability.setTerms(java.lang.Iterable<com.microsoft.store.partnercenter.models.products.AvailabilityTerm>)"
  fullName: "com.microsoft.store.partnercenter.models.products.Availability.setTerms(Iterable<AvailabilityTerm> value)"
  name: "setTerms(Iterable<AvailabilityTerm> value)"
  nameWithType: "Availability.setTerms(Iterable<AvailabilityTerm> value)"
  summary: "Sets the terms if applicable to this availability."
  parameters:
  - description: "The terms if applicable to this availability."
    name: "value"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.store.partnercenter.models.products.AvailabilityTerm?alt=com.microsoft.store.partnercenter.models.products.AvailabilityTerm&text=AvailabilityTerm\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setTerms(Iterable<AvailabilityTerm> value)"
  desc: "Sets the terms if applicable to this availability."
type: "class"
desc: "Represents a partner's billing profile."
metadata: {}
package: "com.microsoft.store.partnercenter.models.products"
artifact: com.microsoft.store:partnercenter:1.15.3
