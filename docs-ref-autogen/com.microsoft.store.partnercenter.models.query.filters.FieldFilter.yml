### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
name: "FieldFilter"
nameWithType: "FieldFilter"
summary: "A base class that represents a filter applied to a field."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class FieldFilter"
constructors:
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter()"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter()"
  name: "FieldFilter()"
  nameWithType: "FieldFilter.FieldFilter()"
  syntax: "public FieldFilter()"
methods:
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression(com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  name: "generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  nameWithType: "FieldFilter.generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  summary: "Generates a filter expression string."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter expression generator to use."
    name: "filterExpressionGenerator"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator?alt=com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator&text=IFilterExpressionGenerator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  desc: "Generates a filter expression string."
  returns:
    description: "The filter expression according to the provided generator language."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType()"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType()"
  name: "getFieldType()"
  nameWithType: "FieldFilter.getFieldType()"
  syntax: "public FieldType getFieldType()"
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldType?alt=com.microsoft.store.partnercenter.models.query.filters.FieldType&text=FieldType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator()"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator()"
  name: "getOperator()"
  nameWithType: "FieldFilter.getOperator()"
  syntax: "public FieldFilterOperation getOperator()"
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation&text=FieldFilterOperation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType(com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType(FieldType value)"
  name: "setFieldType(FieldType value)"
  nameWithType: "FieldFilter.setFieldType(FieldType value)"
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldType?alt=com.microsoft.store.partnercenter.models.query.filters.FieldType&text=FieldType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setFieldType(FieldType value)"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator(com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator(FieldFilterOperation value)"
  name: "setOperator(FieldFilterOperation value)"
  nameWithType: "FieldFilter.setOperator(FieldFilterOperation value)"
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation&text=FieldFilterOperation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setOperator(FieldFilterOperation value)"
type: "class"
desc: "A base class that represents a filter applied to a field."
metadata: {}
package: "com.microsoft.store.partnercenter.models.query.filters"
artifact: com.microsoft.store:partnercenter:1.15.3
