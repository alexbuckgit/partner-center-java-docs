### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.orders.OrderOperations"
fullName: "com.microsoft.store.partnercenter.orders.OrderOperations"
name: "OrderOperations"
nameWithType: "OrderOperations"
summary: "Order operations implementation class."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.store.partnercenter.BasePartnerComponent?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.store.partnercenter.BasePartnerComponent.getContext()"
- "com.microsoft.store.partnercenter.BasePartnerComponent.getPartner()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class OrderOperations extends BasePartnerComponent<Tuple<String,String>> implements IOrder"
constructors:
- uid: "com.microsoft.store.partnercenter.orders.OrderOperations.OrderOperations(com.microsoft.store.partnercenter.IPartner,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.orders.OrderOperations.OrderOperations(IPartner rootPartnerOperations, String customerId, String orderId)"
  name: "OrderOperations(IPartner rootPartnerOperations, String customerId, String orderId)"
  nameWithType: "OrderOperations.OrderOperations(IPartner rootPartnerOperations, String customerId, String orderId)"
  summary: "Initializes a new instance of the Order<wbr>Operations class."
  parameters:
  - description: "The root partner operations instance."
    name: "rootPartnerOperations"
    type: "<xref href=\"com.microsoft.store.partnercenter.IPartner?alt=com.microsoft.store.partnercenter.IPartner&text=IPartner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The customer identifier."
    name: "customerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The order identifier."
    name: "orderId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public OrderOperations(IPartner rootPartnerOperations, String customerId, String orderId)"
  desc: "Initializes a new instance of the OrderOperations class."
methods:
- uid: "com.microsoft.store.partnercenter.orders.OrderOperations.get()"
  fullName: "com.microsoft.store.partnercenter.orders.OrderOperations.get()"
  name: "get()"
  nameWithType: "OrderOperations.get()"
  summary: "Gets the order information."
  syntax: "public Order get()"
  desc: "Gets the order information."
  returns:
    description: "The customer order."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.orders.Order?alt=com.microsoft.store.partnercenter.models.orders.Order&text=Order\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.orders.OrderOperations.get(java.lang.Boolean)"
  fullName: "com.microsoft.store.partnercenter.orders.OrderOperations.get(Boolean includePrice)"
  name: "get(Boolean includePrice)"
  nameWithType: "OrderOperations.get(Boolean includePrice)"
  summary: "Gets the order information."
  parameters:
  - description: "A flag indicating whether to include pricing details in the order information or not."
    name: "includePrice"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Order get(Boolean includePrice)"
  desc: "Gets the order information."
  returns:
    description: "The order information including pricing details (based on access permissions) when requested."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.orders.Order?alt=com.microsoft.store.partnercenter.models.orders.Order&text=Order\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.orders.OrderOperations.getOrderLineItems()"
  fullName: "com.microsoft.store.partnercenter.orders.OrderOperations.getOrderLineItems()"
  name: "getOrderLineItems()"
  nameWithType: "OrderOperations.getOrderLineItems()"
  summary: "Gets line item collection operations."
  syntax: "public IOrderLineItemCollection getOrderLineItems()"
  desc: "Gets line item collection operations."
  returns:
    description: "The line item collection operations."
    type: "<xref href=\"com.microsoft.store.partnercenter.orders.IOrderLineItemCollection?alt=com.microsoft.store.partnercenter.orders.IOrderLineItemCollection&text=IOrderLineItemCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.orders.OrderOperations.getProvisioningStatus()"
  fullName: "com.microsoft.store.partnercenter.orders.OrderOperations.getProvisioningStatus()"
  name: "getProvisioningStatus()"
  nameWithType: "OrderOperations.getProvisioningStatus()"
  summary: "Gets the order provisioning status operations."
  syntax: "public IOrderProvisioningStatus getProvisioningStatus()"
  desc: "Gets the order provisioning status operations."
  returns:
    description: "The order provisioning status operations."
    type: "<xref href=\"com.microsoft.store.partnercenter.orders.IOrderProvisioningStatus?alt=com.microsoft.store.partnercenter.orders.IOrderProvisioningStatus&text=IOrderProvisioningStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.orders.OrderOperations.patch(com.microsoft.store.partnercenter.models.orders.Order)"
  fullName: "com.microsoft.store.partnercenter.orders.OrderOperations.patch(Order order)"
  name: "patch(Order order)"
  nameWithType: "OrderOperations.patch(Order order)"
  summary: "Updates a customer order."
  parameters:
  - description: "The order to update."
    name: "order"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.orders.Order?alt=com.microsoft.store.partnercenter.models.orders.Order&text=Order\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Order patch(Order order)"
  desc: "Updates a customer order."
  returns:
    description: "The updated order."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.orders.Order?alt=com.microsoft.store.partnercenter.models.orders.Order&text=Order\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Order operations implementation class."
implements:
- "<xref href=\"com.microsoft.store.partnercenter.orders.IOrder?alt=com.microsoft.store.partnercenter.orders.IOrder&text=IOrder\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.store.partnercenter.orders"
artifact: com.microsoft.store:partnercenter:1.15.3
