### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.models.query.QueryFactory"
fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory"
name: "QueryFactory"
nameWithType: "QueryFactory"
summary: "Creates new instances of IQuery objects."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class QueryFactory"
methods:
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildCountQuery()"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildCountQuery()"
  name: "buildCountQuery()"
  nameWithType: "QueryFactory.buildCountQuery()"
  summary: "Builds a count query."
  syntax: "public IQuery buildCountQuery()"
  desc: "Builds a count query."
  returns:
    description: "A count query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildCountQuery(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildCountQuery(FieldFilter filter)"
  name: "buildCountQuery(FieldFilter filter)"
  nameWithType: "QueryFactory.buildCountQuery(FieldFilter filter)"
  summary: "Builds a count query."
  parameters:
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildCountQuery(FieldFilter filter)"
  desc: "Builds a count query."
  returns:
    description: "A count query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildCountQuery(com.microsoft.store.partnercenter.models.query.filters.FieldFilter,java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildCountQuery(FieldFilter filter, Object token)"
  name: "buildCountQuery(FieldFilter filter, Object token)"
  nameWithType: "QueryFactory.buildCountQuery(FieldFilter filter, Object token)"
  summary: "Builds a count query."
  parameters:
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query token."
    name: "token"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildCountQuery(FieldFilter filter, Object token)"
  desc: "Builds a count query."
  returns:
    description: "A count query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int pageSize)"
  name: "buildIndexedQuery(int pageSize)"
  nameWithType: "QueryFactory.buildIndexedQuery(int pageSize)"
  summary: "Builds an indexed query."
  parameters:
  - description: "The number of results to return."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildIndexedQuery(int pageSize)"
  desc: "Builds an indexed query."
  returns:
    description: "A paged query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int,int)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int pageSize, int index)"
  name: "buildIndexedQuery(int pageSize, int index)"
  nameWithType: "QueryFactory.buildIndexedQuery(int pageSize, int index)"
  summary: "Builds an indexed query."
  parameters:
  - description: "The number of results to return."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The results starting index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildIndexedQuery(int pageSize, int index)"
  desc: "Builds an indexed query."
  returns:
    description: "A paged query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int,int,com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int pageSize, int index, FieldFilter filter)"
  name: "buildIndexedQuery(int pageSize, int index, FieldFilter filter)"
  nameWithType: "QueryFactory.buildIndexedQuery(int pageSize, int index, FieldFilter filter)"
  summary: "Builds an indexed query."
  parameters:
  - description: "The number of results to return."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The results starting index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildIndexedQuery(int pageSize, int index, FieldFilter filter)"
  desc: "Builds an indexed query."
  returns:
    description: "A paged query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int,int,com.microsoft.store.partnercenter.models.query.filters.FieldFilter,com.microsoft.store.partnercenter.models.query.sort.Sort)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption)"
  name: "buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption)"
  nameWithType: "QueryFactory.buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption)"
  summary: "Builds an indexed query."
  parameters:
  - description: "The number of results to return."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The results starting index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional sorting options."
    name: "sortOption"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption)"
  desc: "Builds an indexed query."
  returns:
    description: "A paged query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int,int,com.microsoft.store.partnercenter.models.query.filters.FieldFilter,com.microsoft.store.partnercenter.models.query.sort.Sort,java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption, Object token)"
  name: "buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption, Object token)"
  nameWithType: "QueryFactory.buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption, Object token)"
  summary: "Builds an indexed query."
  parameters:
  - description: "The number of results to return."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The results starting index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional sorting options."
    name: "sortOption"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional query token."
    name: "token"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildIndexedQuery(int pageSize, int index, FieldFilter filter, Sort sortOption, Object token)"
  desc: "Builds an indexed query."
  returns:
    description: "A paged query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(com.microsoft.store.partnercenter.models.query.SeekOperation)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(SeekOperation seekOperation)"
  name: "buildSeekQuery(SeekOperation seekOperation)"
  nameWithType: "QueryFactory.buildSeekQuery(SeekOperation seekOperation)"
  summary: "Builds a seek query."
  parameters:
  - description: "The seek operation to perform."
    name: "seekOperation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSeekQuery(SeekOperation seekOperation)"
  desc: "Builds a seek query."
  returns:
    description: "The seek query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(com.microsoft.store.partnercenter.models.query.SeekOperation,int)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize)"
  name: "buildSeekQuery(SeekOperation seekOperation, int pageSize)"
  nameWithType: "QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize)"
  summary: "Builds a seek query."
  parameters:
  - description: "The seek operation to perform."
    name: "seekOperation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The desired result page size."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSeekQuery(SeekOperation seekOperation, int pageSize)"
  desc: "Builds a seek query."
  returns:
    description: "The seek query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(com.microsoft.store.partnercenter.models.query.SeekOperation,int,int)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index)"
  name: "buildSeekQuery(SeekOperation seekOperation, int pageSize, int index)"
  nameWithType: "QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index)"
  summary: "Builds a seek query."
  parameters:
  - description: "The seek operation to perform."
    name: "seekOperation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The desired result page size."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The index of the page to retrieve. This is only used if the seek operation specified a page index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSeekQuery(SeekOperation seekOperation, int pageSize, int index)"
  desc: "Builds a seek query."
  returns:
    description: "The seek query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(com.microsoft.store.partnercenter.models.query.SeekOperation,int,int,com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter)"
  name: "buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter)"
  nameWithType: "QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter)"
  summary: "Builds a seek query."
  parameters:
  - description: "The seek operation to perform."
    name: "seekOperation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The desired result page size."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The index of the page to retrieve. This is only used if the seek operation specified a page index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional filter to apply."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter)"
  desc: "Builds a seek query."
  returns:
    description: "The seek query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(com.microsoft.store.partnercenter.models.query.SeekOperation,int,int,com.microsoft.store.partnercenter.models.query.filters.FieldFilter,com.microsoft.store.partnercenter.models.query.sort.Sort)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption)"
  name: "buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption)"
  nameWithType: "QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption)"
  summary: "Builds a seek query."
  parameters:
  - description: "The seek operation to perform."
    name: "seekOperation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The desired result page size."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The index of the page to retrieve. This is only used if the seek operation specified a page index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional filter to apply."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional sorting options."
    name: "sortingOption"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption)"
  desc: "Builds a seek query."
  returns:
    description: "The seek query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(com.microsoft.store.partnercenter.models.query.SeekOperation,int,int,com.microsoft.store.partnercenter.models.query.filters.FieldFilter,com.microsoft.store.partnercenter.models.query.sort.Sort,java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption, Object token)"
  name: "buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption, Object token)"
  nameWithType: "QueryFactory.buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption, Object token)"
  summary: "Builds a seek query."
  parameters:
  - description: "The seek operation to perform."
    name: "seekOperation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The desired result page size."
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The index of the page to retrieve. This is only used if the seek operation specified a page index."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional filter to apply."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional sorting options."
    name: "sortingOption"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional query token."
    name: "token"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSeekQuery(SeekOperation seekOperation, int pageSize, int index, FieldFilter filter, Sort sortingOption, Object token)"
  desc: "Builds a seek query."
  returns:
    description: "The seek query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery()"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery()"
  name: "buildSimpleQuery()"
  nameWithType: "QueryFactory.buildSimpleQuery()"
  summary: "Builds a simple query."
  syntax: "public IQuery buildSimpleQuery()"
  desc: "Builds a simple query."
  returns:
    description: "A simple query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery(FieldFilter filter)"
  name: "buildSimpleQuery(FieldFilter filter)"
  nameWithType: "QueryFactory.buildSimpleQuery(FieldFilter filter)"
  summary: "Builds a simple query."
  parameters:
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSimpleQuery(FieldFilter filter)"
  desc: "Builds a simple query."
  returns:
    description: "A simple query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery(com.microsoft.store.partnercenter.models.query.filters.FieldFilter,com.microsoft.store.partnercenter.models.query.sort.Sort)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery(FieldFilter filter, Sort sortOption)"
  name: "buildSimpleQuery(FieldFilter filter, Sort sortOption)"
  nameWithType: "QueryFactory.buildSimpleQuery(FieldFilter filter, Sort sortOption)"
  summary: "Builds a simple query."
  parameters:
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional sorting options."
    name: "sortOption"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSimpleQuery(FieldFilter filter, Sort sortOption)"
  desc: "Builds a simple query."
  returns:
    description: "A simple query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery(com.microsoft.store.partnercenter.models.query.filters.FieldFilter,com.microsoft.store.partnercenter.models.query.sort.Sort,java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.buildSimpleQuery(FieldFilter filter, Sort sortOption, Object token)"
  name: "buildSimpleQuery(FieldFilter filter, Sort sortOption, Object token)"
  nameWithType: "QueryFactory.buildSimpleQuery(FieldFilter filter, Sort sortOption, Object token)"
  summary: "Builds a simple query."
  parameters:
  - description: "An optional filter."
    name: "filter"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional sorting options."
    name: "sortOption"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional query token."
    name: "token"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IQuery buildSimpleQuery(FieldFilter filter, Sort sortOption, Object token)"
  desc: "Builds a simple query."
  returns:
    description: "A simple query."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.QueryFactory.getInstance()"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryFactory.getInstance()"
  name: "getInstance()"
  nameWithType: "QueryFactory.getInstance()"
  summary: "Gets an instance of the query factory."
  modifiers:
  - "static"
  syntax: "public static QueryFactory getInstance()"
  desc: "Gets an instance of the query factory."
  returns:
    description: "An instance of the query factory."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.QueryFactory?alt=com.microsoft.store.partnercenter.models.query.QueryFactory&text=QueryFactory\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Creates new instances of IQuery objects."
metadata: {}
package: "com.microsoft.store.partnercenter.models.query"
artifact: com.microsoft.store:partnercenter:1.15.3
