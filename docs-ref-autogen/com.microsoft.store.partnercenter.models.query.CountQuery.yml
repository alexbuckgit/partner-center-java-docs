### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.models.query.CountQuery"
fullName: "com.microsoft.store.partnercenter.models.query.CountQuery"
name: "CountQuery"
nameWithType: "CountQuery"
summary: "A query that returns the number of entities that may optionally fit a filter."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.store.partnercenter.models.query.BaseQuery?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getFilter()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getIndex()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getPageSize()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getSeekOperation()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getSort()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getToken()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.getType()"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.setIndex(int)"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.setPageSize(int)"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.setSeekOperation(com.microsoft.store.partnercenter.models.query.SeekOperation)"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.setSort(com.microsoft.store.partnercenter.models.query.sort.Sort)"
- "com.microsoft.store.partnercenter.models.query.BaseQuery.setToken(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CountQuery extends BaseQuery"
constructors:
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery()"
  name: "CountQuery()"
  nameWithType: "CountQuery.CountQuery()"
  modifiers:
  - "protected"
  syntax: "protected CountQuery()"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery(java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery(Object token)"
  name: "CountQuery(Object token)"
  nameWithType: "CountQuery.CountQuery(Object token)"
  modifiers:
  - "protected"
  parameters:
  - name: "token"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected CountQuery(Object token)"
methods:
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter()"
  name: "getFilter()"
  nameWithType: "CountQuery.getFilter()"
  summary: "Gets or sets the query filter."
  overridden: "com.microsoft.store.partnercenter.models.query.BaseQuery.getFilter()"
  syntax: "public FieldFilter getFilter()"
  desc: "Gets or sets the query filter."
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.getType()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.getType()"
  name: "getType()"
  nameWithType: "CountQuery.getType()"
  summary: "Gets the query type."
  overridden: "com.microsoft.store.partnercenter.models.query.BaseQuery.getType()"
  syntax: "public QueryType getType()"
  desc: "Gets the query type."
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.QueryType?alt=com.microsoft.store.partnercenter.models.query.QueryType&text=QueryType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter(FieldFilter value)"
  name: "setFilter(FieldFilter value)"
  nameWithType: "CountQuery.setFilter(FieldFilter value)"
  summary: "The query filter."
  overridden: "com.microsoft.store.partnercenter.models.query.BaseQuery.setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setFilter(FieldFilter value)"
  desc: "The query filter."
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.toString()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.toString()"
  name: "toString()"
  nameWithType: "CountQuery.toString()"
  summary: "Returns a string representation of the query."
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  desc: "Returns a string representation of the query."
  returns:
    description: "A string representation of the query."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A query that returns the number of entities that may optionally fit a filter."
metadata: {}
package: "com.microsoft.store.partnercenter.models.query"
artifact: com.microsoft.store:partnercenter:1.15.3
