### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations"
fullName: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations"
name: "CustomerUserLicenseCollectionOperations"
nameWithType: "CustomerUserLicenseCollectionOperations"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.store.partnercenter.BasePartnerComponent?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.store.partnercenter.BasePartnerComponent.getContext()"
- "com.microsoft.store.partnercenter.BasePartnerComponent.getPartner()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CustomerUserLicenseCollectionOperations extends BasePartnerComponent<Tuple<String,String>> implements ICustomerUserLicenseCollection"
constructors:
- uid: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations.CustomerUserLicenseCollectionOperations(com.microsoft.store.partnercenter.IPartner,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations.CustomerUserLicenseCollectionOperations(IPartner rootPartnerOperations, String customerId, String userId)"
  name: "CustomerUserLicenseCollectionOperations(IPartner rootPartnerOperations, String customerId, String userId)"
  nameWithType: "CustomerUserLicenseCollectionOperations.CustomerUserLicenseCollectionOperations(IPartner rootPartnerOperations, String customerId, String userId)"
  summary: "Initializes a new instance of the Customer<wbr>User<wbr>License<wbr>Collection<wbr>Operations class."
  parameters:
  - description: "The root partner operations instance."
    name: "rootPartnerOperations"
    type: "<xref href=\"com.microsoft.store.partnercenter.IPartner?alt=com.microsoft.store.partnercenter.IPartner&text=IPartner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The customer identifier."
    name: "customerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The user identifier."
    name: "userId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomerUserLicenseCollectionOperations(IPartner rootPartnerOperations, String customerId, String userId)"
  desc: "Initializes a new instance of the CustomerUserLicenseCollectionOperations class."
methods:
- uid: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations.get()"
  fullName: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations.get()"
  name: "get()"
  nameWithType: "CustomerUserLicenseCollectionOperations.get()"
  summary: "Retrieves the assigned licenses to a customer user."
  syntax: "public ResourceCollection<License> get()"
  desc: "Retrieves the assigned licenses to a customer user."
  returns:
    description: "The customer user's directory roles."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.ResourceCollection?alt=com.microsoft.store.partnercenter.models.ResourceCollection&text=ResourceCollection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.store.partnercenter.models.licenses.License?alt=com.microsoft.store.partnercenter.models.licenses.License&text=License\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations.get(java.util.List<com.microsoft.store.partnercenter.models.licenses.LicenseGroupId>)"
  fullName: "com.microsoft.store.partnercenter.customerusers.CustomerUserLicenseCollectionOperations.get(List<LicenseGroupId> licenseGroupIds)"
  name: "get(List<LicenseGroupId> licenseGroupIds)"
  nameWithType: "CustomerUserLicenseCollectionOperations.get(List<LicenseGroupId> licenseGroupIds)"
  summary: "Retrieves the assigned licenses to a customer user."
  parameters:
  - description: "License group identifier"
    name: "licenseGroupIds"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.store.partnercenter.models.licenses.LicenseGroupId?alt=com.microsoft.store.partnercenter.models.licenses.LicenseGroupId&text=LicenseGroupId\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ResourceCollection<License> get(List<LicenseGroupId> licenseGroupIds)"
  desc: "Retrieves the assigned licenses to a customer user."
  returns:
    description: "The customer user's directory roles."
    type: "<xref href=\"com.microsoft.store.partnercenter.models.ResourceCollection?alt=com.microsoft.store.partnercenter.models.ResourceCollection&text=ResourceCollection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.store.partnercenter.models.licenses.License?alt=com.microsoft.store.partnercenter.models.licenses.License&text=License\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
implements:
- "<xref href=\"com.microsoft.store.partnercenter.customerusers.ICustomerUserLicenseCollection?alt=com.microsoft.store.partnercenter.customerusers.ICustomerUserLicenseCollection&text=ICustomerUserLicenseCollection\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.store.partnercenter.customerusers"
artifact: com.microsoft.store:partnercenter:1.15.3
