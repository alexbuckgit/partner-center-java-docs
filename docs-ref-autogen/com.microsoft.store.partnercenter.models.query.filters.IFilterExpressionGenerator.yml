### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
name: "IFilterExpressionGenerator"
nameWithType: "IFilterExpressionGenerator"
summary: "Represents a filter expression generator using a language."
syntax: "public interface IFilterExpressionGenerator"
methods:
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  name: "generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  nameWithType: "IFilterExpressionGenerator.generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  summary: "Generates a compound filter expression (A equals 5 and (B equals 8 or C not<wbr>Equals 0))"
  modifiers:
  - "abstract"
  parameters:
  - description: "The left side expression."
    name: "leftSideExpression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter operator."
    name: "operation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation&text=FieldFilterOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The right side expression."
    name: "rightSideExpression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  desc: "Generates a compound filter expression (A equals 5 and (B equals 8 or C notEquals 0))"
  returns:
    description: "The filter expression."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  name: "generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  nameWithType: "IFilterExpressionGenerator.generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  summary: "Generates a simple filter expression."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter field."
    name: "field"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter operation."
    name: "operation"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation&text=FieldFilterOperation\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of field."
    name: "type"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldType?alt=com.microsoft.store.partnercenter.models.query.filters.FieldType&text=FieldType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  desc: "Generates a simple filter expression."
  returns:
    description: "The filter expression."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Represents a filter expression generator using a language."
metadata: {}
package: "com.microsoft.store.partnercenter.models.query.filters"
artifact: com.microsoft.store:partnercenter:1.15.3
