### YamlMime:JavaType
uid: "com.microsoft.store.partnercenter.models.query.BaseQuery"
fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery"
name: "BaseQuery"
nameWithType: "BaseQuery"
summary: "The base class which all queries should derive from."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class BaseQuery implements IQuery"
constructors:
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.BaseQuery()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.BaseQuery()"
  name: "BaseQuery()"
  nameWithType: "BaseQuery.BaseQuery()"
  summary: "Initializes a new instance of the Base<wbr>Query class."
  modifiers:
  - "protected"
  syntax: "protected BaseQuery()"
  desc: "Initializes a new instance of the BaseQuery class."
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.BaseQuery(java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.BaseQuery(Object token)"
  name: "BaseQuery(Object token)"
  nameWithType: "BaseQuery.BaseQuery(Object token)"
  summary: "Initializes a new instance of the Base<wbr>Query class."
  modifiers:
  - "protected"
  parameters:
  - description: "The query token."
    name: "token"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BaseQuery(Object token)"
  desc: "Initializes a new instance of the BaseQuery class."
methods:
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getFilter()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getFilter()"
  name: "getFilter()"
  nameWithType: "BaseQuery.getFilter()"
  summary: "Gets or sets the query filter."
  syntax: "public FieldFilter getFilter()"
  desc: "Gets or sets the query filter."
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getIndex()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getIndex()"
  name: "getIndex()"
  nameWithType: "BaseQuery.getIndex()"
  summary: "Gets or sets the result starting index."
  syntax: "public int getIndex()"
  desc: "Gets or sets the result starting index."
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getPageSize()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getPageSize()"
  name: "getPageSize()"
  nameWithType: "BaseQuery.getPageSize()"
  summary: "Gets or sets the results page size."
  syntax: "public int getPageSize()"
  desc: "Gets or sets the results page size."
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getSeekOperation()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getSeekOperation()"
  name: "getSeekOperation()"
  nameWithType: "BaseQuery.getSeekOperation()"
  summary: "Gets or sets the seek operation that needs to be performed."
  syntax: "public SeekOperation getSeekOperation()"
  desc: "Gets or sets the seek operation that needs to be performed."
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getSort()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getSort()"
  name: "getSort()"
  nameWithType: "BaseQuery.getSort()"
  summary: "Gets or sets the query sorting options."
  syntax: "public Sort getSort()"
  desc: "Gets or sets the query sorting options."
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getToken()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getToken()"
  name: "getToken()"
  nameWithType: "BaseQuery.getToken()"
  summary: "Gets the query token."
  syntax: "public Object getToken()"
  desc: "Gets the query token. The token may hold context used to represent current state with back end services."
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.getType()"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.getType()"
  name: "getType()"
  nameWithType: "BaseQuery.getType()"
  summary: "Gets the query type."
  syntax: "public QueryType getType()"
  desc: "Gets the query type."
  returns:
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.QueryType?alt=com.microsoft.store.partnercenter.models.query.QueryType&text=QueryType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.setFilter(FieldFilter value)"
  name: "setFilter(FieldFilter value)"
  nameWithType: "BaseQuery.setFilter(FieldFilter value)"
  summary: "The query filter."
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.filters.FieldFilter?alt=com.microsoft.store.partnercenter.models.query.filters.FieldFilter&text=FieldFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setFilter(FieldFilter value)"
  desc: "The query filter."
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.setIndex(int)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.setIndex(int value)"
  name: "setIndex(int value)"
  nameWithType: "BaseQuery.setIndex(int value)"
  summary: "Sets the result starting index."
  parameters:
  - name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setIndex(int value)"
  desc: "Sets the result starting index."
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.setPageSize(int)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.setPageSize(int value)"
  name: "setPageSize(int value)"
  nameWithType: "BaseQuery.setPageSize(int value)"
  summary: "Sets the results page size."
  parameters:
  - name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setPageSize(int value)"
  desc: "Sets the results page size."
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.setSeekOperation(com.microsoft.store.partnercenter.models.query.SeekOperation)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.setSeekOperation(SeekOperation value)"
  name: "setSeekOperation(SeekOperation value)"
  nameWithType: "BaseQuery.setSeekOperation(SeekOperation value)"
  summary: "Sets the seek operation that needs to be performed."
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.SeekOperation?alt=com.microsoft.store.partnercenter.models.query.SeekOperation&text=SeekOperation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSeekOperation(SeekOperation value)"
  desc: "Sets the seek operation that needs to be performed."
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.setSort(com.microsoft.store.partnercenter.models.query.sort.Sort)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.setSort(Sort value)"
  name: "setSort(Sort value)"
  nameWithType: "BaseQuery.setSort(Sort value)"
  summary: "Sets the query sorting options."
  parameters:
  - name: "value"
    type: "<xref href=\"com.microsoft.store.partnercenter.models.query.sort.Sort?alt=com.microsoft.store.partnercenter.models.query.sort.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSort(Sort value)"
  desc: "Sets the query sorting options."
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery.setToken(java.lang.Object)"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery.setToken(Object value)"
  name: "setToken(Object value)"
  nameWithType: "BaseQuery.setToken(Object value)"
  summary: "Sets the query token."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setToken(Object value)"
  desc: "Sets the query token."
type: "class"
desc: "The base class which all queries should derive from. This class does not support any query capabilities except for the token by default. Therefore, implementation classes will pick and choose what to support."
implements:
- "<xref href=\"com.microsoft.store.partnercenter.models.query.IQuery?alt=com.microsoft.store.partnercenter.models.query.IQuery&text=IQuery\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.store.partnercenter.models.query"
artifact: com.microsoft.store:partnercenter:1.15.3
